apply plugin: 'java'

project.ext {
  wildflyVersion='9.0.2.Final'
  opensingularDir='build/opensingular'
}

task downloadWildFly {
  doLast {
    def wildfly = new File('wildfly.zip')
      if (!wildfly.exists()) {
        new URL('http://download.jboss.org/wildfly/'+wilflyVersion+'/wildfly-'+wildflyVersion+'.zip').withInputStream{ i -> wildfly.withOutputStream{ it << i }}
      }		
  }	
}

task unzipWildFly(type: Copy){
  def wildfly = new File('wildfly')
    def wildflyzip = new File('wildfly.zip')
    if (wildflyzip.exists() && !wildfly.exists()) {
      from zipTree('wildfly.zip')
      into wildfly
    }
}

task configureWildFly(dependsOn: ['downloadWildFly', 'unzipWildFly']) {

}

task createFolders {
  doLast {
    mkdir(opensingularDir)
    mkdir(opensingularDir+'/wildfly')
    mkdir(opensingularDir+'/lib')
    mkdir(opensingularDir+'/mongo')
    mkdir(opensingularDir+'/tmp')
    mkdir(opensingularDir+'/deploy')
    mkdir(opensingularDir+'/bin')
    mkdir(opensingularDir+'/logs')
    mkdir(opensingularDir+'/conf')
    mkdir(opensingularDir+'/runtime')
  }
}

task copyContents {
  doLast {
    copy {
      from 'resources/bin'
      into opensingularDir+'/bin'
    }
    copy {
      from 'wildfly/wildfly-'+wildflyVersion
      into opensingularDir+'/wildfly'
    }
    copy {
      from 'resources/wildfly'
      into opensingularDir+'/wildfly'
    }
    copy {
      from 'resources/conf'
      into opensingularDir+'/conf'
    }
  }
}

task createZip (type: Zip) {
  from opensingularDir
}

task install(dependsOn: ['configureWildFly', 'clean', 'createFolders', 'copyContents', 'createZip']) {
  doLast {
    println 'ok'
  }
}
